pipeline {
  agent {
    kubernetes {
        yamlFile "./k8s/build.yaml"
    }
  }

  environment {
      SERVICE = "cvat-backend"
      PROJECT = "halocom-io/cvat-internal-tool"
      GITHUB_REPO = "https://github.com/${PROJECT}"
      REGISTRY = "registry.digitalocean.com/halocom"
  }

  stages {

    stage('Checkout Source') {
      when {
          branch 'release/*'
      }

      steps {
          checkout scm
          script {
              env.VERSION = env.BRANCH_NAME.split("/")[1]
          }
      }
    }
    
    stage("Build image") {
          environment {
              IMAGE_TAG_PRE = "${REGISTRY}/${PROJECT}"
          }
          steps {
			container('docker') {
				script {
					  sh 'echo "${BRANCH_NAME}"'
					  env.VERSION = env.BRANCH_NAME.split("/")[1]
					  sh 'echo "${VERSION}"'
					  env.IMAGE_TAG = "${IMAGE_TAG_PRE}:${VERSION}"
					  sh 'echo "${IMAGE_TAG}"'
					  /* sh 'docker build -t "${IMAGE_TAG}" --build-arg TF_ANNOTATION=no --build-arg AUTO_SEGMENTATION=no --build-arg WITH_TESTS=no --build-arg TZ="Etc/UTC" --build-arg OPENVINO_TOOLKIT=no --build-arg USER=django --build-arg DJANGO_CONFIGURATION=production --build-arg TZ="Etc/UTC" .' */
				}
			}
          }
      }
    
    stage("Push image") {
          steps {
              container('docker') {
                  script {
                      docker.withRegistry('https://${REGISTRY}', 'do-registry-id') {
						  sh 'echo "${BRANCH_NAME}"'
						  env.VERSION = env.BRANCH_NAME.split("/")[1]
						  sh 'echo "${VERSION}"'
						  env.IMAGE_TAG = "${IMAGE_TAG_PRE}:${VERSION}"
						  sh 'echo "${IMAGE_TAG}"'
                          /* sh 'docker push "${IMAGE_TAG}"' */
                      }
                  }
              }
          }
     }

    stage('Deploy') {
       environment {
           NAMESPACE = "cvat"
           IMAGE_TAG = "${REGISTRY}/${PROJECT}:${VERSION}"
       }
       steps {
           timeout(10) {
             withKubeConfig([credentialsId: 'k8s-config-file']) {
				  sh 'echo "${BRANCH_NAME}"'
				  env.VERSION = env.BRANCH_NAME.split("/")[1]
				  sh 'echo "${VERSION}"'
				  env.IMAGE_TAG = "${IMAGE_TAG_PRE}:${VERSION}"
				  sh 'echo "${IMAGE_TAG}"'
				  sh 'echo "${SERVICE}"'
               /* sh """ */
               /*     sed -i -e 's|{{SERVICE}}|${SERVICE}|g; s|{{IMAGE_TAG}}|${IMAGE_TAG}|g' ./k8s/deployment.stag.yaml */
               /*     kubectl apply -f ./k8s/deployment-be.stag.yaml -n ${NAMESPACE}  */
               /*     kubectl rollout status deployment/${SERVICE} -n ${NAMESPACE} */
               /* """ */
             }
           }
       }
    }
  }
}
